@model Admin_TekBot_Prod_.Models.User

@{
    ViewBag.Title = "Edit";
}

@Styles.Render("~/Content/EstiloFormulario.css")
@Styles.Render("~/Content/EstiloBoton.css")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4 class="titulos">Edit User</h4>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.mail)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User_Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User_Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamId, "TeamId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Teams", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Users_Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new SelectList(new List<Object> { { "Active" }, { "Inactive" } }), "Please select a Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Users_Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Users_positions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Positions", new SelectList(new List<Object> { { "Manager" }, { "Support Engineer" }, { "QM/Support Engineer" }, { "SME" } }), "Please select a position", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Users_Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Save" class="myButton" onClick="return Confirmar('Woudl you like to save the changes?', 'Save');" />
                <input id="guardar" class="btnInvisible" type="submit" value="Save" />
                <input type="button" class="myButton" value="Regresar" onclick="location.href='@Url.Action("Index", "Users")'" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
